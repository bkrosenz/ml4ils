#!/bin/bash
#PBS -k o
#PBS -M bkrosenz@indiana.edu
#PBS -l vmem=32gb,nodes=1:ppn=8,walltime=4:0:0 
#PBS -m abe
#PBS -N dbupdate
#PBS -d /N/dc2/projects/bkrosenz/deep_ils/pbs

N=8

source ~/.bash_profile;
module load anaconda gsl gnu-parallel

source activate bio3.6

OUTDIR=/N/dc2/projects/bkrosenz/deep_ils/sims/seqgen-aa-1000bp-theta0.01
WORKING_DIR=/N/dc2/projects/bkrosenz/deep_ils/code/pylib

### concatenate all the leftover raxml files

# cd $OUTDIR;
# find raxml -name 'RAxML_bestTree.*.raxml' |perl -pe 's/_[a-z]+_PROTCAT(WAG|LG).raxml/ PROTCAT$1/'|sort|uniq > raxml.txt

# concatenate(){
#     size=$(du -k "$3" | cut -f 1);
#     if [ $size -le 1 ];
#     then  cat ${1}_*_${2}.raxml > $3;
# 	  rm ${1}_*_${2}.raxml;
#     fi;
# }
# export -f concatenate;

# parallel -j$N --colsep ' '  concatenate {1} {2} tmp/{1}_{2}.raxml.trees :::: raxml.txt
# mv tmp/raxml/*trees inferred_trees/
# rename RAxML_bestTree.t_ t_ inferred_trees/* 

cd $WORKING_DIR;

pwd;

# bash rooted.sh $N;
# echo finished rooting trees...;

postgres -D /N/dc2/projects/bkrosenz/deep_ils/databases/pgsql/data >logfile.updatedb 2>&1 &

# echo started db...;
# bash test_sql.sh
# echo updated postgresql db...

# bash test_summarize_sql.sh 50 $N
# bash test_summarize_sql.sh 100 $N
# bash test_summarize_sql.sh 250 $N
# bash test_summarize_sql.sh 500 $N
#bash test_summarize_sql.sh 1000 $N
bash test_summarize_sql.sh 2000 $N
echo finished summarizing...

cd /N/dc2/projects/bkrosenz/deep_ils/pbs;
qsub learn_covs_parallel.pbs

# for resdir in `find /N/dc2/projects/bkrosenz/deep_ils/results/ms_learned -name 'theta*' -type d`;
# do
#     bash test_learn_config.sh $resdir $N;
#     echo finished $resdir;
#     bash plot_all.sh $N;
#     echo finished plotting  $resdir;
# done
