#!/bin/bash
#PBS -k o
#PBS -M bkrosenz@indiana.edu
#PBS -l vmem=96gb,nodes=1:ppn=12,walltime=9:0:0 
#PBS -m abe
#PBS -N summarize
#PBS -d /N/dc2/projects/bkrosenz/deep_ils/pbs

njobs=4
nthreads=2

source ~/.bash_profile;
module load anaconda gsl gnu-parallel

source activate bio3.6

WORKING_DIR=/N/dc2/projects/bkrosenz/deep_ils/code/pylib

### concatenate all the leftover raxml files

# cd $OUTDIR;
# find raxml -name 'RAxML_bestTree.*.raxml' |perl -pe 's/_[a-z]+_PROTCAT(WAG|LG).raxml/ PROTCAT$1/'|sort|uniq > raxml.txt

# concatenate(){
#     size=$(du -k "$3" | cut -f 1);
#     if [ $size -le 1 ];
#     then  cat ${1}_*_${2}.raxml > $3;
# 	  rm ${1}_*_${2}.raxml;
#     fi;
# }
# export -f concatenate;

# parallel -j$N --colsep ' '  concatenate {1} {2} tmp/{1}_{2}.raxml.trees :::: raxml.txt
# mv tmp/raxml/*trees inferred_trees/
# rename RAxML_bestTree.t_ t_ inferred_trees/* 

cd $WORKING_DIR;

pwd;

echo waiting for db to start...
pg_ctl -o "-S 32MB -c effective_io_concurrency=4 -c effective_cache_size=32GB -c max_parallel_workers_per_gather=12 -c max_worker_processes=12 -c max_parallel_workers=12 -c max_wal_size=4GB -c wal_writer_delay=1000ms" -D /N/dc2/projects/bkrosenz/databases/postgres -l logfile.updatedb start


########## delete this
# psql -d sim4 -a -f create_views.sql
psql -d sim4 -a -f refresh_views.sql

# # dir shouldn't exist yet, but just in case...
# backup_dir=/N/dc2/projects/bkrosenz/ml4ils/databases/sim4.postgres.backup.dir.$$
# if [ -d $backup_dir ]; then rm -rf $backup_dir; fi
# pg_dump -j12 -Fd sim4 -Z9 -f$backup_dir 
########## to here

# <nprocs> <nloci> <seqlen>
parallel --shuf -j$njobs test_summarize_sql.sh $nthreads {} ::: 50 100 250 500 1000 2000 \
         ::: 1000 500 200 100;#  \
         # ::: <(seq 1 4);

# cd /N/dc2/projects/bkrosenz/deep_ils/pbs && qsub learn_covs_parallel.pbs
